name: Combine Parkruns Data

on:
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  combine_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # Adjust Node version as needed

    - name: Fetch Parkruns JSON
      run: |
        curl -o parkruns.json https://raw.githubusercontent.com/ALD-Models/Testing/main/parkruns.json

    - name: Process and Combine Data
      run: |
        # Load necessary Node.js packages
        npm install axios fs

        # Create a Node.js script to process the data
        echo "
        const axios = require('axios');
        const fs = require('fs');

        async function fetchData() {
          const countriesData = JSON.parse(fs.readFileSync('parkruns.json'));
          const combinedData = { countries: {}, events: [] };

          // Use Promise.all to fetch data concurrently
          const fetchPromises = [];

          for (const [key, country] of Object.entries(countriesData.countries)) {
            const countryCode = country.url ? country.url.split('.')[1] : null; // Ensure there's a URL
            const eventShortNames = Object.values(countriesData.events.features).map(event => event.properties.EventShortName.toLowerCase());
            
            for (const eventName of eventShortNames) {
              const fetchPromise = (async () => {
                try {
                  const response = await axios.get(\`https://parkrun-map.com/page-data/parkruns/\${countryCode}/\${eventName}/page-data.json\`);
                  const eventData = response.data.result.data.internalParkruns;

                  combinedData.events.push({
                    ...countriesData.events.features.find(e => e.properties.EventShortName.toLowerCase() === eventName),
                    additionalData: eventData
                  });
                } catch (error) {
                  console.error(\`Failed to fetch data for event: \${eventName}, Error: \${error.message}\`);
                }
              })();

              fetchPromises.push(fetchPromise);
            }
          }

          // Wait for all fetches to complete
          await Promise.all(fetchPromises);

          // Log the combined data
          console.log('Combined Data:', JSON.stringify(combinedData, null, 2));
          
          // Save combined data to a new file if there are events
          if (combinedData.events.length > 0) {
            fs.writeFileSync('combined_parkruns.json', JSON.stringify(combinedData, null, 2));
            console.log('Successfully created combined_parkruns.json');
          } else {
            console.error('No events found; combined_parkruns.json was not created.');
          }
        }

        fetchData().catch(console.error);
        " > combine-parkruns.js

        # Run the Node.js script
        node combine-parkruns.js

    - name: Commit combined data
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'actions@github.com'
        
        # Check if the combined_parkruns.json file exists
        if [ -f combined_parkruns.json ]; then
          git add combined_parkruns.json
          git commit -m "Add combined parkruns data"
          git push
        else
          echo "combined_parkruns.json not found; skipping commit."
        fi
